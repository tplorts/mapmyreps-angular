.loading(*ngIf="isLoading; else content")
  mat-spinner([diameter]='48')
  p Loading Atlas &amp; Congressional Info

ng-template(#content): div
  svg(
    [attr.width]='width',
    [attr.height]='height',
  )
    g.nation([attr.transform]='nationTransform')
      g.states([ngClass]="{ 'uniform-color': !isPartyColoringOn }")
        g.state-group(
          *ngFor='let state of stateFeatures',
        )
          svg:path.state-path(
            [ngClass]="{ 'selected': isSelected(state) }",
            [attr.d]='state.pathData',
            [matTooltip]='state.tooltipText',
            (click)='selectState(state)',
            [attr.fill]='state.fillColor',
          )
          //- svg:text.state-label(
          //-   [attr.x]='state.centroid.x',
          //-   [attr.y]='state.centroid.y',
          //- )
            | {{ state.seatProportionsByParty.Democrat | percent }}
            | /
            | {{ state.seatProportionsByParty.Republican | percent }}
      svg:path.state-borders([attr.d]='stateBordersPathData')

  div
    mat-slide-toggle(
      [checked]="isPartyColoringOn",
      (change)="isPartyColoringOn = !isPartyColoringOn"
    ) Color states by party

  div(*ngIf="isPartyColoringOn")
    mat-button-toggle-group((change)="coloringMode = $event.value")
      mat-button-toggle(
        *ngFor="let mode of AllColoringModes",
        value="{{ mode }}",
        [checked]="mode === coloringMode"
      ) {{ mode }}
    div(*ngIf="coloringMode === 'Proportional'")
      mat-button-toggle-group((change)="chromaMixMode = $event.value")
        mat-button-toggle(
          *ngFor="let mode of allChromaMixModes",
          value="{{ mode }}",
          [checked]="mode == chromaMixMode"
        ) {{ mode }}